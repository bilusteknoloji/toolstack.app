name: Deploy IBAN Keeper

on:
  workflow_dispatch:

jobs:
  build-image:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Build Date and Tag
        run: |
          echo "BUILD_DATE=$(date)" >> $GITHUB_ENV
          echo "BUILD_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and push to GitHub Container Registry
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: false
          tags: ghcr.io/${{ github.repository }}/toolstack.app:latest
          build-args: |
            BUILD_SHA=${{ env.BUILD_SHA }}
            BUILD_DATE=${{ env.BUILD_DATE }}

  deploy-to-portainer:
    runs-on: ubuntu-24.04
    needs: build-image
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate Deploy Date
        run: |
          echo "DEPLOY_DATE=$(date -u --date='3 hours' '+%Y-%m-%d %H:%M:%S UTC+3')" >> $GITHUB_ENV

      - name: Read Stack YAML
        run: |
          STACK_CONTENT=$(awk '{gsub(/"/, "\\\""); printf "%s\\n", $0}' stacks/ibankeeper.yml)
          echo "STACK_CONTENT=$STACK_CONTENT" >> $GITHUB_ENV

      - name: Update Stack in Portainer
        run: |
          curl -X PUT "${{ secrets.PORTAINER_URL }}/api/stacks/${{ secrets.PORTAINER_IBAN_KEEPER_STACK_ID }}/update?endpointId=${{ secrets.PORTAINER_ENDPOINT_ID }}" \
               -H "X-API-Key: ${{ secrets.PORTAINER_API_KEY }}" \
               -H "Content-Type: application/json" \
               --data-raw "{
                 \"env\": [{ \"name\": \"LAST_DEPLOY\", \"value\": \"${{ env.DEPLOY_DATE }}\" }],
                 \"prune\": true,
                 \"pullImage\": true,
                 \"stackFileContent\": \"${{ env.STACK_CONTENT }}\"
               }"
